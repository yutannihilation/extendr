(function() {var implementors = {};
implementors["extendr_api"] = [{"text":"impl From&lt;Box&lt;dyn Error + 'static, Global&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ str&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;i32&gt; for Bool","synthetic":false,"types":[]},{"text":"impl From&lt;bool&gt; for Bool","synthetic":false,"types":[]},{"text":"impl From&lt;Bool&gt; for bool","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ Bool&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;()&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Result&lt;T, Error&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Character&lt;'a&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ Robj&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 1]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 2]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 3]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 4]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 5]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 6]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 7]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 8]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 9]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 10]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 11]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 12]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 13]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 14]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 15]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 16]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 17]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 18]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;[T; 19]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;Vec&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T]&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'a T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Range&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Range&lt;T&gt;: RobjItertools,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Range&lt;T&gt; as Iterator&gt;::Item: ToVectorValue,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RangeInclusive&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RangeInclusive&lt;T&gt;: RobjItertools,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;RangeInclusive&lt;T&gt; as Iterator&gt;::Item: ToVectorValue,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToVectorValue,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Iter&lt;'a, f64&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Iter&lt;'a, i32&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Iter&lt;'a, Bool&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;HashMap&lt;&amp;'a str, Robj, RandomState&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;List&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: IntoIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::IntoIter: ExactSizeIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Item: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Expr&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: IntoIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::IntoIter: ExactSizeIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Item: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Raw&lt;'a&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Symbol&lt;'a&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;Primitive&lt;'a&gt;&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;Lang&lt;T&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: IntoIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::IntoIter: DoubleEndedIterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Item: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, P, NV&gt; From&lt;Env&lt;P, NV&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Into&lt;Robj&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;NV: IntoIterator + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;NV::Item: Into&lt;(String, Robj)&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, NV&gt; From&lt;Pairlist&lt;NV&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NV: IntoIterator + 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;NV::Item: Into&lt;(Option&lt;String&gt;, Robj)&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for Symbol&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RArray&lt;T, [usize; 1]&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RArray&lt;T, [usize; 2]&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;RArray&lt;T, [usize; 3]&gt;&gt; for Robj <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Into&lt;Robj&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()